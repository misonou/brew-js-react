// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClassNameMixin should persist monitored class names in re-render 1`] = `
<div
  class=" foo"
/>
`;

exports[`StatefulMixin#onLayoutEffect should be called with same state object passed to initElement 1`] = `
<DocumentFragment>
  <div
    class=""
    data-custom="1"
  >
    1
  </div>
  <div
    class=""
    data-custom="2"
  >
    2
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#onLayoutEffect should be called with same state object passed to initElement 2`] = `
<DocumentFragment>
  <div
    class=""
    data-custom="2"
  >
    2
  </div>
  <div
    class=""
    data-custom="1"
  >
    1
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#onLayoutEffect should be called with same state object passed to initElement 3`] = `
<DocumentFragment>
  <div
    class=""
    data-custom="3"
  >
    3
  </div>
  <div
    class=""
    data-custom="1"
  >
    1
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#state should set state to correct target in each render cycle 1`] = `
<DocumentFragment>
  <div
    class=""
    data-index="0"
    data-text="1"
  >
    1
  </div>
  <div
    class=""
    data-index="1"
    data-text="2"
  >
    2
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#state should set state to correct target in each render cycle 2`] = `
<DocumentFragment>
  <div
    class=""
    data-index="0"
    data-text="2"
  >
    2
  </div>
  <div
    class=""
    data-index="1"
    data-text="1"
  >
    1
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#state should set state to correct target in each render cycle in child component 1`] = `
<DocumentFragment>
  <div
    class=""
    data-count="1"
    data-index="1"
    data-text="1"
  >
    1
  </div>
  <div
    class=""
    data-count="1"
    data-index="0"
    data-text="2"
  >
    2
  </div>
  <div
    class=""
    data-count="1"
    data-index="1"
    data-text="3"
  >
    3
  </div>
</DocumentFragment>
`;

exports[`StatefulMixin#state should set state to correct target in each render cycle in child component 2`] = `
<DocumentFragment>
  <div
    class=""
    data-count="1"
    data-index="1"
    data-text="1"
  >
    1
  </div>
  <div
    class=""
    data-count="2"
    data-index="0"
    data-text="3"
  >
    3
  </div>
  <div
    class=""
    data-count="2"
    data-index="1"
    data-text="2"
  >
    2
  </div>
</DocumentFragment>
`;

exports[`StaticAttributeMixin should add custom attributes to element 1`] = `
<DocumentFragment>
  <div
    class=""
    data-custom="foo"
  />
</DocumentFragment>
`;

exports[`StaticAttributeMixin should add custom attributes to element 2`] = `
<DocumentFragment>
  <div
    class=""
    data-custom="foo"
  />
</DocumentFragment>
`;

exports[`use should accept class name string as second or next argument 1`] = `
<DocumentFragment>
  <div
    class="foo"
  >
    foo
  </div>
</DocumentFragment>
`;

exports[`use should accept mutable ref object as first argument 1`] = `
<DocumentFragment>
  <div
    class=""
    scrollable-target=""
  >
    foo
  </div>
</DocumentFragment>
`;

exports[`use should accept ref callback as first argument 1`] = `
<DocumentFragment>
  <div
    class=""
    scrollable-target=""
  >
    foo
  </div>
</DocumentFragment>
`;

exports[`use should accept undefined as first argument 1`] = `
<DocumentFragment>
  <div
    class=""
    scrollable-target=""
  >
    foo
  </div>
</DocumentFragment>
`;

exports[`use should apply all class names from mixins 1`] = `
<DocumentFragment>
  <div
    class="foo bar"
  />
</DocumentFragment>
`;

exports[`use should apply all custom attributes from mixins 1`] = `
<DocumentFragment>
  <div
    class=""
    data-custom-1="foo"
    data-custom-2="bar"
  />
</DocumentFragment>
`;
